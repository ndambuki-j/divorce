# -*- coding: utf-8 -*-
"""Divorce.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17tQSnfYSZCaElUQMe6_TmTqCZ9LfIvAt
"""

#IMPORTING LIBRARIES 
import pandas as pd
from sklearn.compose import ColumnTransformer, make_column_transformer
from sklearn.preprocessing import OneHotEncoder
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.tree import DecisionTreeClassifier
from sklearn.linear_model import LogisticRegression, Perceptron
from keras.models import Sequential
from keras.layers import Dense

#Importing Data
df = pd.read_csv('/content/sample_data/divorce.csv')

"""# ***EXPLORATORY DATA ANALYSIS***"""

#Checking the number of columns
df.info()

#Summary Statistics
df.describe()

#Viewing the first 5 lines of the dataset
df.head()

#Checking missing values
total = df.isnull().sum().sort_values(ascending=False)
missing_data = pd.concat([total], axis=1,keys=['# Null Values'])
missing_data

#Viewing column names
df.columns.values

#Creating a matrix
X = df.iloc[:, :-1].values
y = df.iloc[:, -1].values

y = y.reshape(len(X),1)

#Encoding features because they're discrete
o_enc = OneHotEncoder()
X = o_enc.fit_transform(X).toarray()

#Splitting data to train set and test set
#Data Split 60-40
X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=.4, random_state=10)

"""# ***MACHINE LEARNING MODEL***"""

#Random
r_clf = RandomForestClassifier(n_estimators=1000)
r_clf.fit(X_train,y_train)
accuracy_score(y_test,r_clf.predict(X_test))

# Commented out IPython magic to ensure Python compatibility.
#Decision Tree
dct = DecisionTreeClassifier(random_state=0,max_depth=4)
# %time dct.fit(X_train,y_train)

print(accuracy_score(y_train,dct.predict(X_train)))
print(accuracy_score(y_test, dct.predict(X_test)))